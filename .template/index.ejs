<!-- tools -->	
<%	
  let tableCloseFlag = false;	
  function isObject(data) {	
    return Object.prototype.toString.call(data) === '[object Object]'	
  }	
  function buildTitle(content, tag) {	
    return `<h${ tag } style='margin-left: ${( tag - 2 ) * 20}px'>${ content }</h${ tag }>`	
  }	
  function buildLink(name, data) {	
    return `	
      <td style="width: 300px;">	
        <a href='${data[ 0 ]}'>${name}</a>	
      </td>	
      <td style="text-align: center;">	
        <p>${data[ 1 ]}</p>	
      </td>	
    `.trim()	
  }	
%>	

<!-- content -->	
<% 	
(function renderView(data, index = 2) {	
  for (const item of Object.keys(data).sort((a, b) => parseInt(a) - parseInt(b))) {	
    if (isObject(data[ item ])) { 	
      if (tableCloseFlag) {	
        // 渲染table end 标签	
        tableCloseFlag = false %>	
  </tbody>	
</table>	
      <% } %>	
<%- buildTitle(item, index)  %>	
    <% 	
    // 若是普通对象则进行递归渲染	
    renderView(data[ item ], index + 1);	
  } else { 	
    // 渲染table start 标签	
    if (!tableCloseFlag) {	
      tableCloseFlag = true %>	
<table style="margin-left: 10px;">	
  <thead>	
    <th>topic</th>	
    <th>review</th>	
  </thead>	
  <tbody>	
    <% } %>	
  <tr>	
    <%- buildLink(item, data[ item ]) %>	
  </tr>	
    <% } %>	
  <% } %>	
<% })(data)	
// 函数执行完毕需要检测是否闭合table标签	
if (tableCloseFlag) {	
%>	
  </tbody>	
</table>	
<% } %> 